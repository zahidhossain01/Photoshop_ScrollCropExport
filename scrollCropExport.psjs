const {app, constants} = require('photoshop');
const ufs = require('uxp').storage.localFileSystem;
const domains = require('uxp').storage.domains;


// app.preferences.unitsAndRulers.rulerUnits = PIXELS;
app.preferences.unitsAndRulers.rulerUnits = constants.RulerUnits.PIXELS;
const initialDoc = app.activeDocument;
const dir = path.dirname(initialDoc.path);

let cell_width = 1080;
let cell_height = 1350;
let prefix = "prefix";

let n = Math.floor(initialDoc.width / cell_width);


// let b1 = {left: 0,top: 0,right: 1080,bottom: 1350};
// let b2 = {left: 1080,top: 0,right: 1080*2,bottom: 1350};
// let bounds_reset = {left: (1-8)*1080,top: 0,right: 1080,bottom: 1350};
// doc.crop(b1);

doc_crop_array = [];
for(i = 0; i < n; i++){
    newDoc = await initialDoc.duplicate();
    cropBounds = {left: i*cell_width, top: 0, right: (i+1)*cell_width, bottom: cell_height};
    doc_crop_pair = {
        doc: newDoc,
        bounds: cropBounds
    }
    doc_crop_array.push(doc_crop_pair);
}

for(i = 0; i < doc_crop_array.length; i++){
    let doc_crop_pair = doc_crop_array[i];
    let doc_i = doc_crop_pair.doc;
    let bounds = doc_crop_pair.bounds;
    let filename = prefix+'_'+(i+1)+'.jpg';
    console.log(filename);

    try {
        let file_i = await ufs.getFileForSaving(filename);
        doc_i.crop(bounds);
        doc_i.saveAs.jpg(file_i, {quality: 12, embedColorProfile: true}, true);
    } catch (e) {
        console.log(e);
    }

    doc_i.closeWithoutSaving();
}

